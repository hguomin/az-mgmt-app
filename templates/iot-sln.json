{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "projectName": {
            "type": "string",
            "defaultValue": "aziot1026",
            "metadata": {
                "description": "The prefix for azure resources naming."
            }
        },
        "adminUserName": {
            "type": "string",
            "defaultValue": "iotadmin",
            "metadata": {
                "description": "Dev VM's user name."
            }
        },
        "adminPassword": {
            "type": "securestring",
            "defaultValue":"P@ssw0rd0123!",
            "metadata": {
                "description": "Dev VM's user password."
            }
        }
    },
    "variables": {
        "iotHubName": "[concat(parameters('projectName'), '-iothub')]",
        "eventHubName": "[concat(parameters('projectName'), 'eventhub')]",
        "storageName": "[concat(toLower(parameters('projectName')), 'storage')]",
        "storageAccountid": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]",
        "tsiName": "[concat(parameters('projectName'), '-tsi')]",
        "cosmosDbName": "[concat(parameters('projectName'), 'cosmosdb')]",
        "streamAnalyticsName": "[concat(parameters('projectName'), '-streamanalytics')]",
        "devVmName": "[concat(parameters('projectName'), '-devvm')]",
        "publicIPName": "[concat(variables('devVmName'), '-ip')]",
        "nsgName": "[concat(variables('devVmName'), '-nsg')]",
        "vnetName": "[concat(resourceGroup().name, '-vnet')]",
        "nicName": "[concat(variables('devVmName'), '-nic')]",
        "adxName": "[concat(parameters('projectName'), 'adx')]",
        "funcAppName": "[concat(parameters('projectName'), '-funcapp')]",
        "webhostPlanName": "[concat(parameters('projectName'), '-webhostplan')]",
        "location": "[resourceGroup().location]"
    },
    "resources": [
        {
            "type": "Microsoft.Devices/IotHubs",
            "apiVersion": "2020-07-10-preview",
            "name": "[variables('iotHubName')]",
            "location": "[variables('location')]",
            "sku": {
                "name": "S3",
                "tier": "Standard",
                "capacity": 1
            },
            "identity": {
                "type": "None"
            },
            "properties": {
                "ipFilterRules": [],
                "eventHubEndpoints": {
                    "events": {
                        "retentionTimeInDays": 1,
                        "partitionCount": 4
                    }
                },
                "routing": {
                    "endpoints": {
                        "serviceBusQueues": [],
                        "serviceBusTopics": [],
                        "eventHubs": [],
                        "storageContainers": []
                    },
                    "routes": [],
                    "fallbackRoute": {
                        "name": "$fallback",
                        "source": "DeviceMessages",
                        "condition": "true",
                        "endpointNames": [
                            "events"
                        ],
                        "isEnabled": true
                    }
                },
                "messagingEndpoints": {
                    "fileNotifications": {
                        "lockDurationAsIso8601": "PT1M",
                        "ttlAsIso8601": "PT1H",
                        "maxDeliveryCount": 10
                    }
                },
                "enableFileUploadNotifications": false,
                "cloudToDevice": {
                    "maxDeliveryCount": 10,
                    "defaultTtlAsIso8601": "PT1H",
                    "feedback": {
                        "lockDurationAsIso8601": "PT1M",
                        "ttlAsIso8601": "PT1H",
                        "maxDeliveryCount": 10
                    }
                },
                "features": "None"
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts",
            "apiVersion": "2020-06-01-preview",
            "name": "[variables('cosmosDbName')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "defaultExperience": "Azure Cosmos DB for MongoDB API",
                "hidden-cosmos-mmspecial": "",
                "CosmosAccountType": "非生产"
            },
            "kind": "MongoDB",
            "identity": {
                "type": "None"
            },
            "properties": {
                "publicNetworkAccess": "Enabled",
                "enableAutomaticFailover": false,
                "enableMultipleWriteLocations": false,
                "isVirtualNetworkFilterEnabled": false,
                "virtualNetworkRules": [],
                "disableKeyBasedMetadataWriteAccess": false,
                "enableFreeTier": false,
                "enableAnalyticalStorage": false,
                "createMode": "Default",
                "databaseAccountOfferType": "Standard",
                "consistencyPolicy": {
                    "defaultConsistencyLevel": "Session",
                    "maxIntervalInSeconds": 5,
                    "maxStalenessPrefix": 100
                },
                "apiProperties": {
                    "serverVersion": "3.6"
                },
                "locations": [
                    {
                        "locationName": "[resourceGroup().location]",
                        "provisioningState": "Succeeded",
                        "failoverPriority": 0,
                        "isZoneRedundant": false
                    }
                ],
                "cors": [],
                "capabilities": [
                    {
                        "name": "EnableMongo"
                    },
                    {
                        "name": "DisableRateLimitingResponses"
                    }
                ],
                "ipRules": [],
                "backupPolicy": {
                    "type": "Periodic",
                    "periodicModeProperties": {
                        "backupIntervalInMinutes": 240,
                        "backupRetentionIntervalInHours": 8
                    }
                }
            }
        },
        {
            "type": "Microsoft.EventHub/namespaces",
            "apiVersion": "2018-01-01-preview",
            "name": "[variables('eventHubName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard",
                "tier": "Standard",
                "capacity": 3
            },
            "properties": {
                "zoneRedundant": false,
                "isAutoInflateEnabled": false,
                "maximumThroughputUnits": 0,
                "kafkaEnabled": true
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-05-01",
            "name": "[variables('nsgName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "RDP",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 300,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-05-01",
            "name": "[variables('publicIPName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Basic"
            },
            "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Dynamic",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-05-01",
            "name": "[variables('vnetName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/24"
                    ]
                },
                "subnets": [
                    {
                        "name": "default",
                        "properties": {
                            "addressPrefix": "10.0.0.0/24",
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    }
                ],
                "virtualNetworkPeerings": [],
                "enableDdosProtection": false,
                "enableVmProtection": false
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "name": "[variables('storageName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "isHnsEnabled": true,
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": false,
                "encryption": {
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        },
        {
            "type": "Microsoft.StreamAnalytics/streamingjobs",
            "apiVersion": "2016-03-01",
            "name": "[variables('streamAnalyticsName')]",
            "location": "China East",
            "properties": {
                "sku": {
                    "name": "Standard"
                },
                "eventsOutOfOrderPolicy": "Adjust",
                "outputErrorPolicy": "Stop",
                "eventsOutOfOrderMaxDelayInSeconds": 0,
                "eventsLateArrivalMaxDelayInSeconds": 5,
                "dataLocale": "en-US"
            }
        },
        {
            "type": "Microsoft.TimeSeriesInsights/environments",
            "apiVersion": "2020-05-15",
            "name": "[variables('tsiName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "L1",
                "capacity": 1
            },
            "kind": "Gen2",
            "properties": {
                "storageConfiguration": {
                    "accountName": "[variables('storageName')]",
                    "managementKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageName')), '2019-06-01').keys[0].value]"
                },
                "timeSeriesIdProperties": [
                    {
                        "name": "iothub-connection-device-id",
                        "type": "string"
                    }
                ],
                "warmStoreConfiguration": {
                    "dataRetention": "P7D"
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-07-01",
            "name": "[variables('devVmName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_D4ds_v4"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "microsoftvisualstudio",
                        "offer": "visualstudio2019latest",
                        "sku": "vs-2019-comm-latest-ws2019",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Windows",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS"
                        },
                        "diskSizeGB": 127
                    },
                    "dataDisks": []
                },
                "osProfile": {
                    "computerName": "[variables('devVmName')]",
                    "adminUsername": "[parameters('adminUserName')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": false
                    }
                }
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases",
            "apiVersion": "2020-06-01-preview",
            "name": "[concat(variables('cosmosDbName'), '/lab-db')]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosDbName'))]"
            ],
            "properties": {
                "resource": {
                    "id": "lab-db"
                },
                "options": {
                    "throughput": 400
                }
            }
        },
        {
            "type": "Microsoft.EventHub/namespaces/AuthorizationRules",
            "apiVersion": "2017-04-01",
            "name": "[concat(variables('eventHubName'), '/RootManageSharedAccessKey')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', variables('eventHubName'))]"
            ],
            "properties": {
                "rights": [
                    "Listen",
                    "Manage",
                    "Send"
                ]
            }
        },
        {
            "type": "Microsoft.EventHub/namespaces/networkRuleSets",
            "apiVersion": "2018-01-01-preview",
            "name": "[concat(variables('eventHubName'), '/default')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', variables('eventHubName'))]"
            ],
            "properties": {
                "defaultAction": "Deny",
                "virtualNetworkRules": [],
                "ipRules": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2020-05-01",
            "name": "[concat(variables('nsgName'), '/RDP')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
            ],
            "properties": {
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "3389",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 300,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2020-05-01",
            "name": "[concat(variables('vnetName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]"
            ],
            "properties": {
                "addressPrefix": "10.0.0.0/24",
                "delegations": [],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('storageName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('storageName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/queueServices",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('storageName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/tableServices",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('storageName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.StreamAnalytics/streamingjobs/inputs",
            "apiVersion": "2016-03-01",
            "name": "[concat(variables('streamAnalyticsName'), '/', variables('iotHubName'))]",
            "dependsOn": [
                "[resourceId('Microsoft.StreamAnalytics/streamingjobs', variables('streamAnalyticsName'))]",
                "[resourceId('Microsoft.Devices/IotHubs', variables('iotHubName'))]"
            ],
            "properties": {
                "type": "Stream",
                "datasource": {
                    "type": "Microsoft.Devices/IotHubs",
                    "properties": {
                        "iotHubNamespace": "[variables('iotHubName')]",
                        "sharedAccessPolicyName": "iothubowner",
                        "sharedAccessPolicyKey": "[listkeys(resourceId('Microsoft.Devices/IoTHubs/IotHubKeys', variables('iotHubName'), 'iothubowner'), '2020-03-01').primaryKey]",
                        "endpoint": "messages/events",
                        "consumerGroupName": "$Default"
                    }
                },
                "serialization": {
                    "type": "Json",
                    "properties": {
                        "encoding": "UTF8"
                    }
                }
            }
        },
        {
            "type": "Microsoft.TimeSeriesInsights/environments/accesspolicies",
            "apiVersion": "2020-05-15",
            "name": "[concat(variables('tsiName'), '/ownerAccessPolicyName')]",
            "dependsOn": [
                "[resourceId('Microsoft.TimeSeriesInsights/environments', variables('tsiName'))]"
            ],
            "properties": {
                "principalObjectId": "030f9da0-41f3-49e0-8efd-27a3ab15087d",
                "roles": [
                    "Reader",
                    "Contributor"
                ]
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/collections",
            "apiVersion": "2020-06-01-preview",
            "name": "[concat(variables('cosmosDbName'), '/lab-db/devicetelemetry')]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/mongodbDatabases', variables('cosmosDbName'), 'lab-db')]",
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosDbName'))]"
            ],
            "properties": {
                "resource": {
                    "id": "devicetelemetry",
                    "shardKey": {
                        "deviceid": "Hash"
                    },
                    "indexes": [
                        {
                            "key": {
                                "keys": [
                                    "_id"
                                ]
                            }
                        }
                    ]
                },
                "options": {}
            }
        },
        {
            "type": "Microsoft.TimeSeriesInsights/environments/eventsources",
            "apiVersion": "2020-05-15",
            "name": "[concat(variables('tsiName'), '/', variables('iotHubName'))]",
            "location": "chinaeast2",
            "dependsOn": [
                "[resourceId('Microsoft.TimeSeriesInsights/environments', variables('tsiName'))]",
                "[resourceId('Microsoft.Devices/IotHubs', variables('iotHubName'))]"
            ],
            "kind": "Microsoft.IoTHub",
            "properties": {
                "eventSourceResourceId": "[resourceId('Microsoft.Devices/IotHubs', variables('iotHubName'))]",
                "iotHubName": "[variables('iotHubName')]",
                "keyName": "iothubowner",
                "consumerGroupName": "[concat(parameters('projectName'), '-tsi')]",
                "provisioningState": "Succeeded",
                "sharedAccessKey": "[listkeys(resourceId('Microsoft.Devices/IoTHubs/IotHubKeys', variables('iotHubName'), 'iothubowner'), '2020-03-01').primaryKey]"
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-05-01",
            "name": "[variables('nicName')]",
            "location": "chinaeast2",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), 'default')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPName'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), 'default')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
                }
            }
        },
        {
            "type": "Microsoft.Kusto/Clusters",
            "apiVersion": "2021-01-01",
            "name": "[variables('adxName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard_DS13_v2+1TB_PS",
                "tier": "Standard",
                "capacity": 2
            },
            "properties": {
                "trustedExternalTenants": [
                    {
                        "value": "*"
                    }
                ],
                "optimizedAutoscale": {
                    "version": 1,
                    "isEnabled": true,
                    "minimum": 2,
                    "maximum": 3
                },
                "enableDiskEncryption": false,
                "enableStreamingIngest": false,
                "enablePurge": false,
                "enableDoubleEncryption": false,
                "engineType": "V3"
            }
        },
        {
            "type": "Microsoft.Kusto/Clusters/Databases",
            "apiVersion": "2021-01-01",
            "name": "[concat(variables('adxName'), '/', variables('adxName'), 'db')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Kusto/Clusters', variables('adxName'))]"
            ],
            "kind": "ReadWrite",
            "properties": {
                "softDeletePeriod": "P365D",
                "hotCachePeriod": "P31D"
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2019-08-01",
            "name": "[variables('funcAppName')]",
            "kind": "functionapp,linux",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('webhostPlanName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]"
            ],
            "properties": {
                "name": "[variables('funcAppName')]",
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "FUNCTIONS_WORKER_RUNTIME",
                            "value": "python"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~2"
                        },
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2019-06-01').keys[0].value)]"
                        }
                    ]
                },
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('webhostPlanName'))]",
                "clientAffinityEnabled": false
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2019-08-01",
            "name": "[variables('webhostPlanName')]",
            "location": "[variables('location')]",
            "kind": "linux",
            "properties": {
                "reserved": true
            },
            "sku": {
                "Tier": "Standard",
                "Name": "P2V2"
            }
        }
    ]
}